#version 460

#include "Simulation/Utils.comp"

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(rgba8, binding = 0) readonly  uniform image2D pass_2;
layout(rgba8, binding = 1) writeonly uniform image2D pass_3;

uniform float iTime;
uniform uint  iFrame;
uniform uvec2 iResolution;

#define buf(uv) imageLoad(pass_2, ivec2(uv * iResolution))

vec4 pass3(vec2 uv) {
	vec4 c = buf(uv);
	float t = mod(iTime, 12.); // simulated month of the year
	float delta = c.y * (1. - 2. * smoothstep(1.5, 4.5, t) + 2. * smoothstep(7.5, 10.5, t));
	return vec4(c.x + delta,0,0,0);
}

void main() {
	ivec2 pixel_id = ivec2(gl_GlobalInvocationID.xy);
	vec2 uv = vec2(pixel_id) / vec2(iResolution);
	vec4 fragColor;

	fragColor = pass3(uv);
	imageStore(pass_3, pixel_id, fragColor);
}